{% extends 'golive/_layout' %}

{% import "_includes/forms" as forms %}

{% set plugin = craft.plugins.getPlugin('GoLive') %}
{% set pluginSettings = craft.goLive.getSettings() %}

{% block content %}
  {% if craft.config.environmentVariables['goLive_encryptionKey'] is not defined %}
    <h2 class="error">WAIT! You haven't set an encryption key yet, which means entering passwords here is <strong>not</strong> secure!</h2>
    <p>
      <a class="btn" href="{{ url('golive/key') }}">Set an encryption key now</a>
    </p>
    <hr>
  {% endif %}

  <form action="" method="POST" data-saveshortcut>
    <input type="hidden" name="action" value="plugins/savePluginSettings">
    <input type="hidden" name="pluginClass" value="{{ plugin.classHandle }}">
    <input type="hidden" name="redirect" value="golive/settings">
    {{ getCsrfInput() }}
    <h2>1: Before Backup</h2>
    {{ forms.textField({
      class: 'code',
      instructions: 'Commands will be run from this directory. Add your own <code>cd</code> to your commands if you want them to run somewhere else.',
      label: 'Working Directory',
      name: 'settings[beforeBackup][cwd]',
      value: pluginSettings.beforeBackup.cwd is defined ? pluginSettings.beforeBackup.cwd : ''
    }) }}
    {{ forms.editableTableField({
      cols: {
        'command': {
          colId: 'name',
          class: 'code',
          heading: 'Command',
          type: 'singleline'
        }
      },
      id: 'beforeBackupCommands',
      instructions: 'A series of (optional) shell commands to run before the database is dumped. These will be run on <strong>this server</strong>.',
      label: 'Commands to Run Before Backup',
      name: 'settings[beforeBackup][commands]',
      rows: pluginSettings.beforeBackup.commands is defined ? pluginSettings.beforeBackup.commands : [],
    }) }}
    <hr>
    <h2>2: Backup Staging Database</h2>
    {{ forms.editableTableField({
      cols: {
        'table': {
          class: 'code',
          colId: 'name',
          heading: 'Table Name (without ' ~ craft.goLive.getTablePrefix ~ ')',
          type: 'singleline'
        }
      },
      id: 'excludeTables',
      instructions: 'Craft will always exclude <strong>assetindexdata</strong>, <strong>assettransformindex</strong>, <strong>sessions</strong>, <strong>templatecaches</strong>, <strong>templatecachecriteria</strong>, and <strong>templatecacheelements</strong>',
      label: 'Exclude Tables From Backup',
      name: 'settings[backup][excludeTables]',
      rows: pluginSettings.backup.excludeTables is defined ? pluginSettings.backup.excludeTables : [{table: ''}],
    }) }}
    {{
      forms.lightswitchField({
        instructions: 'If <strong>on</strong>, the backup file will be kept in <code>craft/storage/backups</code>. Otherwise, it will be deleted after being copied to the production server.',
        label: 'Keep Backup File?',
        name: 'settings[backup][keepBackup]',
        on: pluginSettings.backup.keepBackup is defined ? pluginSettings.backup.keepBackup : ''
      })
    }}
    <hr>
    <h2>3: Copy Backup to Production</h2>
    {{ forms.textField({
      class: 'code',
      instructions: 'A writable folder on the production server to which the backup file can be copied.',
      label: 'Backup File Destination',
      name: 'settings[copyBackup][destination]',
      placeholder: 'Enter destination folder',
      value: pluginSettings.copyBackup.destination is defined ? pluginSettings.copyBackup.destination : ''
    }) }}
    <hr>
    <h2>4: Import Backup to Production</h2>
    {{
      forms.lightswitchField({
        instructions: 'If <strong>on</strong>, the backup file will be kept on the remote server after import. Otherwise, it will be deleted.',
        label: 'Keep Backup File?',
        name: 'settings[importBackup][keepBackup]',
        on: pluginSettings.importBackup.keepBackup is defined ? pluginSettings.importBackup.keepBackup : ''
      })
    }}
    <hr>
    <h2>5: After Import</h2>
    {{ forms.textField({
      class: 'code',
      instructions: 'Commands will be run from this directory. Add your own <code>cd</code> to your commands if you want them to run somewhere else.',
      label: 'Working Directory',
      name: 'settings[afterImport][cwd]',
      value: pluginSettings.afterImport.cwd is defined ? pluginSettings.afterImport.cwd : ''
    }) }}
    {{ forms.editableTableField({
      cols: {
        'command': {
          colId: 'name',
          class: 'code',
          heading: 'Command',
          type: 'singleline'
        }
      },
      id: 'afterImportCommands',
      instructions: 'A series of (optional) shell commands to run after the database is imported.',
      label: 'Commands to Run After Import',
      name: 'settings[afterImport][commands]',
      rows: pluginSettings.afterImport.commands is defined ? pluginSettings.afterImport.commands : [],
    }) }}
    <hr>
    <input type="submit" value="Save Settings" class="btn submit">
  </form>
{% endblock %}

{% block foot %}
  {{ parent() }}
  {% if craft.request.getParam('firstrun') == 1 %}
    {% include "golive/_includes/first-run-modal" %}
  {% endif %}
{% endblock %}
